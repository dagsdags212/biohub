[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Notebook",
    "section": "",
    "text": "Tools for Retrieving Biological Data\n\n\n\n\n\n\nCLI\n\n\n\n\n\n\n\n\n\nJun 20, 2024\n\n\nJan Emmanuel Samson\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/refgenie.html",
    "href": "tutorials/tools-for-retrieving-biological-data/refgenie.html",
    "title": "BioHub",
    "section": "",
    "text": "Refgenie is a command-line tool that can be used to download and manage reference genomes, and to build and manage custom genome assets. It also provides a Python interface for programmatic access to genome assets.\n\n\n\n\n\n\nflowchart LR\n  list[\"`**refgenie**\n  list`\"]\n  pull[\"`**refgenie**\n  pull`\"]\n  seek[\"`**refgenie**\n  seek`\"]\n  list --&gt; pull --&gt; seek\n\n\n\n\n\n\n\n\n\nRefgenie can be installed as a Python package using pip:\npip install --user refgenie\n\n# Use pipx instead of pip\npipx install refgenie\nor conda:\nconda install -c conda-forge refgenie\n\n# Use mamba/micromamba instead of conda\nmicromamba install refgenie\n\n\n\nrefgenie requires a configuration file that lists the resources in the form of a yaml file. For that you need to select a directory that will store the downloaded resources. The path to the config file is saved as the REFGENIE shell environment variable which will be used for initialization:\n# Store path to config as an environment variable\nexport REFGENIE=~/refs/config.yaml\n\n# Load the REFGENIE variable when launching a shell instance\necho \"export REFGENIE=~/refs/config.yml\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n\n# Run initialization\nrefgenie init\nThe refgenie tool is now ready to be used to download and manage reference genomes.\n\n\n\nA list of pre-built assets from a remote server can be displayed with listr:\nrefgenie listr\nRefrence genome data is fetched using the pull command and the path to the download is retrieved using the seek command.\n# Downloads the hg38 bwa index\nrefgenie pull hg38/bwa_index\n\n# Prints the path to the downloaded hg38 bwa index\nrefgenie seek hg38/bwa_index\nList local genome assets:\nrefgenie list\nUse command substitution to store the genome path to a variable:\n# Retrieve the human reference genome\nrefgenie pull hg38/fasta\n\n# Save path of reference genome to a variable\nREF=$(refgenie seek hg38/fasta)\nThen use the resulting path in downstream tools:\n# Generate statistics for the human reference genome\nseqkit stats ${REF}\nSubscribe to the iGenomes server which hosts additional reference genomes and genome assets.\nrefgenie subscribe -s http://igenomes.databio.org/"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/refgenie.html#how-to-use-refgenie",
    "href": "tutorials/tools-for-retrieving-biological-data/refgenie.html#how-to-use-refgenie",
    "title": "BioHub",
    "section": "",
    "text": "Refgenie is a command-line tool that can be used to download and manage reference genomes, and to build and manage custom genome assets. It also provides a Python interface for programmatic access to genome assets.\n\n\n\n\n\n\nflowchart LR\n  list[\"`**refgenie**\n  list`\"]\n  pull[\"`**refgenie**\n  pull`\"]\n  seek[\"`**refgenie**\n  seek`\"]\n  list --&gt; pull --&gt; seek\n\n\n\n\n\n\n\n\n\nRefgenie can be installed as a Python package using pip:\npip install --user refgenie\n\n# Use pipx instead of pip\npipx install refgenie\nor conda:\nconda install -c conda-forge refgenie\n\n# Use mamba/micromamba instead of conda\nmicromamba install refgenie\n\n\n\nrefgenie requires a configuration file that lists the resources in the form of a yaml file. For that you need to select a directory that will store the downloaded resources. The path to the config file is saved as the REFGENIE shell environment variable which will be used for initialization:\n# Store path to config as an environment variable\nexport REFGENIE=~/refs/config.yaml\n\n# Load the REFGENIE variable when launching a shell instance\necho \"export REFGENIE=~/refs/config.yml\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n\n# Run initialization\nrefgenie init\nThe refgenie tool is now ready to be used to download and manage reference genomes.\n\n\n\nA list of pre-built assets from a remote server can be displayed with listr:\nrefgenie listr\nRefrence genome data is fetched using the pull command and the path to the download is retrieved using the seek command.\n# Downloads the hg38 bwa index\nrefgenie pull hg38/bwa_index\n\n# Prints the path to the downloaded hg38 bwa index\nrefgenie seek hg38/bwa_index\nList local genome assets:\nrefgenie list\nUse command substitution to store the genome path to a variable:\n# Retrieve the human reference genome\nrefgenie pull hg38/fasta\n\n# Save path of reference genome to a variable\nREF=$(refgenie seek hg38/fasta)\nThen use the resulting path in downstream tools:\n# Generate statistics for the human reference genome\nseqkit stats ${REF}\nSubscribe to the iGenomes server which hosts additional reference genomes and genome assets.\nrefgenie subscribe -s http://igenomes.databio.org/"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/index.html",
    "href": "tutorials/tools-for-retrieving-biological-data/index.html",
    "title": "Tools for Retrieving Biological Data",
    "section": "",
    "text": "Data is distributed via various repositories. The most commonly used ones are:\n\n\n\n\n\n\nflowchart LR\n  1A[\"`**NCBI**\n  Genbank/RefSeq`\"]\n  1B[\"`Use numbers\n  **bio, efetch**`\"]\n  \n  2A[\"`**Ensembl**\n  **UCSC**\n  **FlyBase, WormBase**\n  Releases`\"]\n  2B[\"`Use URL\n  **curl, wget, aria2**\n  **genomepy, refgenie**`\"]\n  \n  3A[\"`**NCBI Assemblies**\n  RefSeq genomes`\"]\n  3B[\"`Use accession\n  **datasets**`\"]\n  \n  4A[\"`**Independent\n  Data Tools**`\"]\n  4B[\"`**genomepy**\n  **refgenie**`\"]\n  \n  5[\"`**File Formats**\n  FASTA, GFF, GTF, BED`\"]\n  \n  1A --&gt; 1B --&gt; 5\n  2A --&gt; 2B --&gt; 5\n  3A --&gt; 3B --&gt; 5\n  4A --&gt; 4B --&gt; 5\n\n\n\n\n\n\n\nIn addition, there are software packages such as refgenie and genomepy that can be used to download and manage reference genomes.\n\n\nIf you have an NCBI-based accession number, you can use the bio search command to get information on it.\n# Searches GenBank\nbio search AF086833\n\n# Searches SRA\nbio search SRR1553425\n\n# Searches NCBI Genomes\nbio search GCA_000005845\n\n# Also searches NCBI Genomes\nbio search ecoli\n\n\n\nGenBank is the NIH genetic sequence database, an annotated collection of publicly available DNA sequences. If your data has a GenBank accession number such as AF086833 use the fetch command from the bio module.\n# Create a directory for reference-related data\nmkdir -p refs/\n\n# Accession to be downloaded\nACC=AF086833\n\n# Retrieve FASTA file\n1bio fetch ${ACC} --format fasta &gt; refs/${ACC}.fa\n\n# Retrieve GFF file\n2bio fetch ${ACC} --format gff &gt; refs/${ACC}.gff\n\n1\n\nDownload the sequence file\n\n2\n\nDownload the annotation file\n\n\n\n\n\nIf you know the URL of a resource, you may use wget or curl to download the file.\n# The URL of the file\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\n# Download with curl\ncurl $URL &gt; refs/chr22.fa.gz\nFor large files, aria2 can do faster, multisegmented downloads that has the ability to restart interrupted downloads.\n# The URL of the file\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\naria2 $URL &gt; refs/chr22.fa.gz\n# Download with aria2\n\n\n\nNCBI Datasets is a new resource designed by NCBI to gather data from across NCBI databases.\nIt seems to be the direction that NCBI wants to shepherd users towards. It is a low more complicated and convoluted to use than all the other resources but it is what we got.\ndatasets summary genome taxon \"king penguin\" | jq | more\n\n\n\nEnsembl operates on numbered releases. For example, release 104 was published on March 30, 2021. Data can be retrieved by navigating the file tree in the provided FTP server. Alternatively, you can invoke curl or wget directly on each file.\n# Get the FASTA file from chromosome 22 of the human genome\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\n# Use curl go download the data\n1curl $URL | gunzip -c &gt; refs/chr22.fa\n\n1\n\nDownload from URL and decompress the FASTA file."
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/index.html#how-to-get-genome-data",
    "href": "tutorials/tools-for-retrieving-biological-data/index.html#how-to-get-genome-data",
    "title": "Tools for Retrieving Biological Data",
    "section": "",
    "text": "Data is distributed via various repositories. The most commonly used ones are:\n\n\n\n\n\n\nflowchart LR\n  1A[\"`**NCBI**\n  Genbank/RefSeq`\"]\n  1B[\"`Use numbers\n  **bio, efetch**`\"]\n  \n  2A[\"`**Ensembl**\n  **UCSC**\n  **FlyBase, WormBase**\n  Releases`\"]\n  2B[\"`Use URL\n  **curl, wget, aria2**\n  **genomepy, refgenie**`\"]\n  \n  3A[\"`**NCBI Assemblies**\n  RefSeq genomes`\"]\n  3B[\"`Use accession\n  **datasets**`\"]\n  \n  4A[\"`**Independent\n  Data Tools**`\"]\n  4B[\"`**genomepy**\n  **refgenie**`\"]\n  \n  5[\"`**File Formats**\n  FASTA, GFF, GTF, BED`\"]\n  \n  1A --&gt; 1B --&gt; 5\n  2A --&gt; 2B --&gt; 5\n  3A --&gt; 3B --&gt; 5\n  4A --&gt; 4B --&gt; 5\n\n\n\n\n\n\n\nIn addition, there are software packages such as refgenie and genomepy that can be used to download and manage reference genomes.\n\n\nIf you have an NCBI-based accession number, you can use the bio search command to get information on it.\n# Searches GenBank\nbio search AF086833\n\n# Searches SRA\nbio search SRR1553425\n\n# Searches NCBI Genomes\nbio search GCA_000005845\n\n# Also searches NCBI Genomes\nbio search ecoli\n\n\n\nGenBank is the NIH genetic sequence database, an annotated collection of publicly available DNA sequences. If your data has a GenBank accession number such as AF086833 use the fetch command from the bio module.\n# Create a directory for reference-related data\nmkdir -p refs/\n\n# Accession to be downloaded\nACC=AF086833\n\n# Retrieve FASTA file\n1bio fetch ${ACC} --format fasta &gt; refs/${ACC}.fa\n\n# Retrieve GFF file\n2bio fetch ${ACC} --format gff &gt; refs/${ACC}.gff\n\n1\n\nDownload the sequence file\n\n2\n\nDownload the annotation file\n\n\n\n\n\nIf you know the URL of a resource, you may use wget or curl to download the file.\n# The URL of the file\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\n# Download with curl\ncurl $URL &gt; refs/chr22.fa.gz\nFor large files, aria2 can do faster, multisegmented downloads that has the ability to restart interrupted downloads.\n# The URL of the file\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\naria2 $URL &gt; refs/chr22.fa.gz\n# Download with aria2\n\n\n\nNCBI Datasets is a new resource designed by NCBI to gather data from across NCBI databases.\nIt seems to be the direction that NCBI wants to shepherd users towards. It is a low more complicated and convoluted to use than all the other resources but it is what we got.\ndatasets summary genome taxon \"king penguin\" | jq | more\n\n\n\nEnsembl operates on numbered releases. For example, release 104 was published on March 30, 2021. Data can be retrieved by navigating the file tree in the provided FTP server. Alternatively, you can invoke curl or wget directly on each file.\n# Get the FASTA file from chromosome 22 of the human genome\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\n# Use curl go download the data\n1curl $URL | gunzip -c &gt; refs/chr22.fa\n\n1\n\nDownload from URL and decompress the FASTA file."
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/index.html#how-to-use-refgenie",
    "href": "tutorials/tools-for-retrieving-biological-data/index.html#how-to-use-refgenie",
    "title": "Tools for Retrieving Biological Data",
    "section": "How to use refgenie",
    "text": "How to use refgenie\nRefgenie is a command-line tool that can be used to download and manage reference genomes, and to build and manage custom genome assets. It also provides a Python interface for programmatic access to genome assets.\n\n\n\n\n\n\nflowchart LR\n  list[\"`**refgenie**\n  list`\"]\n  pull[\"`**refgenie**\n  pull`\"]\n  seek[\"`**refgenie**\n  seek`\"]\n  list --&gt; pull --&gt; seek\n\n\n\n\n\n\n\n\nInstallation\nRefgenie can be installed as a Python package using pip:\npip install --user refgenie\n\n# Use pipx instead of pip\npipx install refgenie\nor conda:\nconda install -c conda-forge refgenie\n\n# Use mamba/micromamba instead of conda\nmicromamba install refgenie\n\n\nCreate a config file\nrefgenie requires a configuration file that lists the resources in the form of a yaml file. For that you need to select a directory that will store the downloaded resources. The path to the config file is saved as the REFGENIE shell environment variable which will be used for initialization:\n# Store path to config as an environment variable\nexport REFGENIE=~/refs/config.yaml\n\n# Load the REFGENIE variable when launching a shell instance\necho \"export REFGENIE=~/refs/config.yml\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n\n# Run initialization\nrefgenie init\nThe refgenie tool is now ready to be used to download and manage reference genomes.\n\n\nUsing refgenie\nA list of pre-built assets from a remote server can be displayed with listr:\nrefgenie listr\nRefrence genome data is fetched using the pull command and the path to the download is retrieved using the seek command.\n# Downloads the hg38 bwa index\nrefgenie pull hg38/bwa_index\n\n# Prints the path to the downloaded hg38 bwa index\nrefgenie seek hg38/bwa_index\nList local genome assets:\nrefgenie list\nUse command substitution to store the genome path to a variable:\n# Retrieve the human reference genome\nrefgenie pull hg38/fasta\n\n# Save path of reference genome to a variable\nREF=$(refgenie seek hg38/fasta)\nThen use the resulting path in downstream tools:\n# Generate statistics for the human reference genome\nseqkit stats ${REF}\nSubscribe to the iGenomes server which hosts additional reference genomes and genome assets.\nrefgenie subscribe -s http://igenomes.databio.org/"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/index.html#using-genomepy",
    "href": "tutorials/tools-for-retrieving-biological-data/index.html#using-genomepy",
    "title": "Tools for Retrieving Biological Data",
    "section": "Using genomepy",
    "text": "Using genomepy\n\nHow to use genomepy\ngenomepy is another tool designed for searching and downloading genomic data. It can be used to:\n\nsearch available data\nshow the available metadata\nautomatically download, preprocess\ngenerate optional aligned indexes\n\nCurrently, genomepy supports Ensembl, UCSC, NCBI, and GENCODE.\n\n\n\n\n\n\nflowchart LR\n  genomepy[\"`**genomepy**`\"]\n  commands{\"`**search**\n  **install**\n  **annotation**`\"}\n  storage[\"`files stored in\n  **$home/local/share/genomes**`\"]\n  \n  genomepy --&gt; commands --&gt; storage\n\n\n\n\n\n\n\nSee also: genomepy documentation\n\n\nInstallation\nInstall using micromamba:\nmicromamba install genomepy\nInstall using pip or pipx:\n# Install pipx\npip install pipx\npipx ensurepath\n\n# Install genomepy with pipx\npipx install genomepy\n\n\nUsing genomepy\nUse the search command to query genomes by name or accession:\ngenomepy search ecoli &gt; ecoli_query_results.txt\nA genome index will be downloaded upon invoking the search command for the first time. Hence, the initial search may take a whil depending on your connection speed.\n05:28:31 | INFO | Downloading assembly summaries from GENCODE\n05:29:54 | INFO | Downloading assembly summaries from UCSC\n05:30:05 | INFO | Downloading assembly summaries from Ensembl\n05:30:43 | INFO | Downloading assembly summaries from NCBI, this will take a while...\ngenbank_historical: 73.0k genomes [00:06, 11.1k genomes/s]\nrefseq_historical: 85.6k genomes [00:05, 16.6k genomes/s]\ngenbank: 2.39M genomes [02:11, 18.1k genomes/s]\nrefseq: 378k genomes [00:28, 13.0k genomes/s] \nThe results look like so:\nname                 provider accession         tax_id annotation species                                  other_info                              \n                                                        n r e k   &lt;- UCSC options (see help)                                                       \nEcoliT22_2.0         NCBI     GCF_000247665.3      562     ✓      Escherichia coli O157:H43 str. T22       BAYGEN                                  \nEcoli.O104:H4.LB226692_2.0 NCBI     GCA_000215685.3      562     ✓      Escherichia coli O104:H4 str. LB226692   Life Technologies                       \nEcoli.O104:H4.01-09591_1.0 NCBI     GCA_000221065.2      562     ✓      Escherichia coli O104:H4 str. 01-09591   Life Technologies                       \nEcoli_C227-11_1.0    NCBI     GCA_000220805.2      562     ✓      Escherichia coli O104:H4 str. C227-11    PacBio                                  \necoli009             NCBI     GCA_900607665.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli006             NCBI     GCA_900607465.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli008             NCBI     GCA_900607535.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli017             NCBI     GCA_900608025.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli025             NCBI     GCA_900608175.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli022             NCBI     GCA_900608105.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli015             NCBI     GCA_900607975.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli013             NCBI     GCA_900607805.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL       \nEntries under the name field can be used to download the genome:\ngenomepy install ecoli009\nBy default, the downloaded genomes will be found in the ~/.local/share/genomes directory. For our example, the directory named ecoli009 contains the genome data and other relevant files:\n\n!ls -al ~/.local/share/genomes/ecoli009\n\ntotal 5744\ndrwxrwxr-x 2 dagsdags dagsdags    4096 Jun 21 05:46 .\ndrwxrwxr-x 3 dagsdags dagsdags    4096 Jun 21 05:46 ..\n-rw-rw-r-- 1 dagsdags dagsdags     667 Jun 21 05:46 assembly_report.txt\n-rw-rw-r-- 1 dagsdags dagsdags 5856077 Jun 21 05:46 ecoli009.fa\n-rw-rw-r-- 1 dagsdags dagsdags     171 Jun 21 05:46 ecoli009.fa.fai\n-rw-rw-r-- 1 dagsdags dagsdags     110 Jun 21 05:46 ecoli009.fa.sizes\n-rw-rw-r-- 1 dagsdags dagsdags       0 Jun 21 05:46 ecoli009.gaps.bed\n-rw-rw-r-- 1 dagsdags dagsdags     458 Jun 21 05:46 README.txt"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/index.html#how-to-get-fastq-data",
    "href": "tutorials/tools-for-retrieving-biological-data/index.html#how-to-get-fastq-data",
    "title": "Tools for Retrieving Biological Data",
    "section": "How to get FASTQ data",
    "text": "How to get FASTQ data\nPublished FASTQ files are stored in the Short Read Archive (SRA). Access to SRA can be diagrammed like so:\n\n\n\n\n\n\nflowchart LR\n  fq[\"`**FASTQ FILES**`\"]\n  srr[\"`**SRR number**`\"] --&gt; srr2[\"`Find URL and metadata\n  web, **bio**, **ffq**`\"]\n  sra[\"`**SRA**\n  Short Read Archive`\"] --&gt; sra2[\"`Use SRR number\n  **fastq-dump**`\"] --&gt; fq\n  ensembl[\"`**Ensembl**\n  Sequence archive`\"] --&gt; ensembl2[\"`Find URL\n  **curl**, **wget**, **aria2**`\"]\n  com[\"`**Commercial**\n  Google, Amazon\n  Users pay to download`\"] --&gt; com2[\"`Custom tools\n  **gsutil**, **aws**`\"] --&gt; fq\n\n\n\n\n\n\n\nThe sratools suite from NCBI provides fastq-dump and fasterq-dump to download read data from SRA accessions. In later versions of sratools, fasterq-dump is the preferred tool for fetching read data as demonstrated below:\n# Store accession number and number of reads\nACC=SRR1553425\nN=10000\n\n# Create reads directory\nmkdir reads\n\n# Fetch reads from accession\nfasterq-dump --split-3 -X $N -O reads $ACC\nHowever this method is clunky and fragile, often failing to fetch the required data due to errors that are cryptically communicated to the user. An alternative method is to retrieve the URLs that point to the data and download locally using wget, curl or aria2. Use bio search to retrieve metadata on the SRA accession and parse using jq.\n\n!bio search SRR1553425 | jq -r '.[].fastq_url[]'\n\nhttps://ftp.sra.ebi.ac.uk/vol1/fastq/SRR155/005/SRR1553425/SRR1553425_1.fastq.gz\nhttps://ftp.sra.ebi.ac.uk/vol1/fastq/SRR155/005/SRR1553425/SRR1553425_2.fastq.gz\n\n\n\nUsing the SRA Explorer\nThe SRA Explorer is a web-based tool developed by Phil Lewis aimed to make SRA data more accessible. It allows you to search for datasets and view metadata. The link can be accessed here:\n\nhttps://sra-explorer.info/\n\n\n\nUsing the NCBI website\nYou can also visit NCBI’s SRA repository here to download sequencing read data.\n\n\nHow to download multiple runs\nAll data from a project can be queried using bio search, parsed using csvcut, and concurrently downloaded using parallel or aria2c:\n# Access the project metadata and save as a CSV file\nbio search PRJNA257197 --csv &gt; project.csv\n\n# Extract the first column and download concurrently using parallel\ncat project.csv | csvcut -c 1 | head -n 3 | \\\n    parallel \"fastq-dump -F --split-files -O data {}\""
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/overview.html",
    "href": "tutorials/tools-for-retrieving-biological-data/overview.html",
    "title": "BioHub",
    "section": "",
    "text": "Data is distributed via various repositories. The most commonly used ones are:\n\n\n\n\n\n\nflowchart LR\n  1A[\"`**NCBI**\n  Genbank/RefSeq`\"]\n  1B[\"`Use numbers\n  **bio, efetch**`\"]\n  \n  2A[\"`**Ensembl**\n  **UCSC**\n  **FlyBase, WormBase**\n  Releases`\"]\n  2B[\"`Use URL\n  **curl, wget, aria2**\n  **genomepy, refgenie**`\"]\n  \n  3A[\"`**NCBI Assemblies**\n  RefSeq genomes`\"]\n  3B[\"`Use accession\n  **datasets**`\"]\n  \n  4A[\"`**Independent\n  Data Tools**`\"]\n  4B[\"`**genomepy**\n  **refgenie**`\"]\n  \n  5[\"`**File Formats**\n  FASTA, GFF, GTF, BED`\"]\n  \n  1A --&gt; 1B --&gt; 5\n  2A --&gt; 2B --&gt; 5\n  3A --&gt; 3B --&gt; 5\n  4A --&gt; 4B --&gt; 5\n\n\n\n\n\n\n\nIn addition, there are software packages such as refgenie and genomepy that can be used to download and manage reference genomes.\n\n\nIf you have an NCBI-based accession number, you can use the bio search command to get information on it.\n# Searches GenBank\nbio search AF086833\n\n# Searches SRA\nbio search SRR1553425\n\n# Searches NCBI Genomes\nbio search GCA_000005845\n\n# Also searches NCBI Genomes\nbio search ecoli"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/overview.html#how-to-get-genome-data",
    "href": "tutorials/tools-for-retrieving-biological-data/overview.html#how-to-get-genome-data",
    "title": "BioHub",
    "section": "",
    "text": "Data is distributed via various repositories. The most commonly used ones are:\n\n\n\n\n\n\nflowchart LR\n  1A[\"`**NCBI**\n  Genbank/RefSeq`\"]\n  1B[\"`Use numbers\n  **bio, efetch**`\"]\n  \n  2A[\"`**Ensembl**\n  **UCSC**\n  **FlyBase, WormBase**\n  Releases`\"]\n  2B[\"`Use URL\n  **curl, wget, aria2**\n  **genomepy, refgenie**`\"]\n  \n  3A[\"`**NCBI Assemblies**\n  RefSeq genomes`\"]\n  3B[\"`Use accession\n  **datasets**`\"]\n  \n  4A[\"`**Independent\n  Data Tools**`\"]\n  4B[\"`**genomepy**\n  **refgenie**`\"]\n  \n  5[\"`**File Formats**\n  FASTA, GFF, GTF, BED`\"]\n  \n  1A --&gt; 1B --&gt; 5\n  2A --&gt; 2B --&gt; 5\n  3A --&gt; 3B --&gt; 5\n  4A --&gt; 4B --&gt; 5\n\n\n\n\n\n\n\nIn addition, there are software packages such as refgenie and genomepy that can be used to download and manage reference genomes.\n\n\nIf you have an NCBI-based accession number, you can use the bio search command to get information on it.\n# Searches GenBank\nbio search AF086833\n\n# Searches SRA\nbio search SRR1553425\n\n# Searches NCBI Genomes\nbio search GCA_000005845\n\n# Also searches NCBI Genomes\nbio search ecoli"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/ncbi_datasets.html",
    "href": "tutorials/tools-for-retrieving-biological-data/ncbi_datasets.html",
    "title": "BioHub",
    "section": "",
    "text": "How to use NCBI datasets\nNCBI Datasets is a new resource designed by NCBI to gather data from across NCBI databases.\nIt seems to be the direction that NCBI wants to shepherd users towards. It is a low more complicated and convoluted to use than all the other resources but it is what we got.\ndatasets summary genome taxon \"king penguin\" | jq | more"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/ensembl.html",
    "href": "tutorials/tools-for-retrieving-biological-data/ensembl.html",
    "title": "BioHub",
    "section": "",
    "text": "How to access Ensembl\nEnsembl operates on numbered releases. For example, release 104 was published on March 30, 2021. Data can be retrieved by navigating the file tree in the provided FTP server. Alternatively, you can invoke curl or wget directly on each file.\n# Get the FASTA file from chromosome 22 of the human genome\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\n# Use curl go download the data\n1curl $URL | gunzip -c &gt; refs/chr22.fa\n\n1\n\nDownload from URL and decompress the FASTA file."
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/genbank.html",
    "href": "tutorials/tools-for-retrieving-biological-data/genbank.html",
    "title": "BioHub",
    "section": "",
    "text": "How to access Genbank\nGenBank is the NIH genetic sequence database, an annotated collection of publicly available DNA sequences. If your data has a GenBank accession number such as AF086833 use the fetch command from the bio module.\n# Create a directory for reference-related data\nmkdir -p refs/\n\n# Accession to be downloaded\nACC=AF086833\n\n# Retrieve FASTA file\n1bio fetch ${ACC} --format fasta &gt; refs/${ACC}.fa\n\n# Retrieve GFF file\n2bio fetch ${ACC} --format gff &gt; refs/${ACC}.gff\n\n1\n\nDownload the sequence file\n\n2\n\nDownload the annotation file"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/genomepy.html",
    "href": "tutorials/tools-for-retrieving-biological-data/genomepy.html",
    "title": "Using genomepy",
    "section": "",
    "text": "How to use genomepy\ngenomepy is another tool designed for searching and downloading genomic data. It can be used to:\n\nsearch available data\nshow the available metadata\nautomatically download, preprocess\ngenerate optional aligned indexes\n\nCurrently, genomepy supports Ensembl, UCSC, NCBI, and GENCODE.\n\n\n\n\n\n\nflowchart LR\n  genomepy[\"`**genomepy**`\"]\n  commands{\"`**search**\n  **install**\n  **annotation**`\"}\n  storage[\"`files stored in\n  **$home/local/share/genomes**`\"]\n  \n  genomepy --&gt; commands --&gt; storage\n\n\n\n\n\n\n\nSee also: genomepy documentation\n\n\nInstallation\nInstall using micromamba:\nmicromamba install genomepy\nInstall using pip or pipx:\n# Install pipx\npip install pipx\npipx ensurepath\n\n# Install genomepy with pipx\npipx install genomepy\n\n\nUsing genomepy\nUse the search command to query genomes by name or accession:\ngenomepy search ecoli &gt; ecoli_query_results.txt\nA genome index will be downloaded upon invoking the search command for the first time. Hence, the initial search may take a whil depending on your connection speed.\n05:28:31 | INFO | Downloading assembly summaries from GENCODE\n05:29:54 | INFO | Downloading assembly summaries from UCSC\n05:30:05 | INFO | Downloading assembly summaries from Ensembl\n05:30:43 | INFO | Downloading assembly summaries from NCBI, this will take a while...\ngenbank_historical: 73.0k genomes [00:06, 11.1k genomes/s]\nrefseq_historical: 85.6k genomes [00:05, 16.6k genomes/s]\ngenbank: 2.39M genomes [02:11, 18.1k genomes/s]\nrefseq: 378k genomes [00:28, 13.0k genomes/s] \nThe results look like so:\nname                 provider accession         tax_id annotation species                                  other_info                              \n                                                        n r e k   &lt;- UCSC options (see help)                                                       \nEcoliT22_2.0         NCBI     GCF_000247665.3      562     ✓      Escherichia coli O157:H43 str. T22       BAYGEN                                  \nEcoli.O104:H4.LB226692_2.0 NCBI     GCA_000215685.3      562     ✓      Escherichia coli O104:H4 str. LB226692   Life Technologies                       \nEcoli.O104:H4.01-09591_1.0 NCBI     GCA_000221065.2      562     ✓      Escherichia coli O104:H4 str. 01-09591   Life Technologies                       \nEcoli_C227-11_1.0    NCBI     GCA_000220805.2      562     ✓      Escherichia coli O104:H4 str. C227-11    PacBio                                  \necoli009             NCBI     GCA_900607665.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli006             NCBI     GCA_900607465.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli008             NCBI     GCA_900607535.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli017             NCBI     GCA_900608025.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli025             NCBI     GCA_900608175.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli022             NCBI     GCA_900608105.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli015             NCBI     GCA_900607975.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL         \necoli013             NCBI     GCA_900607805.1      562     ✓      Escherichia coli                         BIOZENTRUM, UNIVERSITY OF BASEL       \nEntries under the name field can be used to download the genome:\ngenomepy install ecoli009\nBy default, the downloaded genomes will be found in the ~/.local/share/genomes directory. For our example, the directory named ecoli009 contains the genome data and other relevant files:\n\n!ls -al ~/.local/share/genomes/ecoli009\n\ntotal 5744\ndrwxrwxr-x 2 dagsdags dagsdags    4096 Jun 21 05:46 .\ndrwxrwxr-x 3 dagsdags dagsdags    4096 Jun 21 05:46 ..\n-rw-rw-r-- 1 dagsdags dagsdags     667 Jun 21 05:46 assembly_report.txt\n-rw-rw-r-- 1 dagsdags dagsdags 5856077 Jun 21 05:46 ecoli009.fa\n-rw-rw-r-- 1 dagsdags dagsdags     171 Jun 21 05:46 ecoli009.fa.fai\n-rw-rw-r-- 1 dagsdags dagsdags     110 Jun 21 05:46 ecoli009.fa.sizes\n-rw-rw-r-- 1 dagsdags dagsdags       0 Jun 21 05:46 ecoli009.gaps.bed\n-rw-rw-r-- 1 dagsdags dagsdags     458 Jun 21 05:46 README.txt"
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/retrieving_fastq.html",
    "href": "tutorials/tools-for-retrieving-biological-data/retrieving_fastq.html",
    "title": "How to get FASTQ data",
    "section": "",
    "text": "Published FASTQ files are stored in the Short Read Archive (SRA). Access to SRA can be diagrammed like so:\n\n\n\n\n\n\nflowchart LR\n  fq[\"`**FASTQ FILES**`\"]\n  srr[\"`**SRR number**`\"] --&gt; srr2[\"`Find URL and metadata\n  web, **bio**, **ffq**`\"]\n  sra[\"`**SRA**\n  Short Read Archive`\"] --&gt; sra2[\"`Use SRR number\n  **fastq-dump**`\"] --&gt; fq\n  ensembl[\"`**Ensembl**\n  Sequence archive`\"] --&gt; ensembl2[\"`Find URL\n  **curl**, **wget**, **aria2**`\"]\n  com[\"`**Commercial**\n  Google, Amazon\n  Users pay to download`\"] --&gt; com2[\"`Custom tools\n  **gsutil**, **aws**`\"] --&gt; fq\n\n\n\n\n\n\n\nThe sratools suite from NCBI provides fastq-dump and fasterq-dump to download read data from SRA accessions. In later versions of sratools, fasterq-dump is the preferred tool for fetching read data as demonstrated below:\n# Store accession number and number of reads\nACC=SRR1553425\nN=10000\n\n# Create reads directory\nmkdir reads\n\n# Fetch reads from accession\nfasterq-dump --split-3 -X $N -O reads $ACC\nHowever this method is clunky and fragile, often failing to fetch the required data due to errors that are cryptically communicated to the user. An alternative method is to retrieve the URLs that point to the data and download locally using wget, curl or aria2. Use bio search to retrieve metadata on the SRA accession and parse using jq.\n\n!bio search SRR1553425 | jq -r '.[].fastq_url[]'\n\nhttps://ftp.sra.ebi.ac.uk/vol1/fastq/SRR155/005/SRR1553425/SRR1553425_1.fastq.gz\nhttps://ftp.sra.ebi.ac.uk/vol1/fastq/SRR155/005/SRR1553425/SRR1553425_2.fastq.gz\n\n\n\nUsing the SRA Explorer\nThe SRA Explorer is a web-based tool developed by Phil Lewis aimed to make SRA data more accessible. It allows you to search for datasets and view metadata. The link can be accessed here:\n\nhttps://sra-explorer.info/\n\n\n\nUsing the NCBI website\nYou can also visit NCBI’s SRA repository here to download sequencing read data.\n\n\nHow to download multiple runs\nAll data from a project can be queried using bio search, parsed using csvcut, and concurrently downloaded using parallel or aria2c:\n# Access the project metadata and save as a CSV file\nbio search PRJNA257197 --csv &gt; project.csv\n\n# Extract the first column and download concurrently using parallel\ncat project.csv | csvcut -c 1 | head -n 3 | \\\n    parallel \"fastq-dump -F --split-files -O data {}\""
  },
  {
    "objectID": "tutorials/tools-for-retrieving-biological-data/url_download.html",
    "href": "tutorials/tools-for-retrieving-biological-data/url_download.html",
    "title": "BioHub",
    "section": "",
    "text": "How to download via URL\nIf you know the URL of a resource, you may use wget or curl to download the file.\n# The URL of the file\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\n# Download with curl\ncurl $URL &gt; refs/chr22.fa.gz\nFor large files, aria2 can do faster, multisegmented downloads that has the ability to restart interrupted downloads.\n# The URL of the file\nURL=http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz\n\naria2 $URL &gt; refs/chr22.fa.gz\n# Download with aria2"
  }
]